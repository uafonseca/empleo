<html lang="en"><head>
    <meta charset="utf-8">
    <meta name="robots" content="noindex, nofollow">

    <title>Registro | Emplear.ec</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    {{ encore_entry_link_tags('app') }}
    <style>
        .error{
            color: red;
            padding: 0;
            margin: 0;
            z-index: 1;
        }
        body{
            background: url({{ asset('build/backend/images/bg/login-img.jpeg') }}) no-repeat;
            background-size:cover ;
            height: 90%;
        }
        .headers h1, .headers h4{
            color: white;
            text-align: center;
        }
        .headers h4{
            margin-bottom: 30px;
        }
        .register{
            background: -webkit-linear-gradient(left, #3931af, #00c6ff);
            margin-top: 3%;
            padding: 3%;
            border-radius: 15px;
            box-shadow: 5px 5px 20px;
            opacity: 0.9!important;
            margin-right: 10px;
            margin-bottom: 10px;
            width: 62%;
        }
        .register-left{
            text-align: center;
            color: #fff;
            margin-top: 4%;
        }
        .register-left input{
            border: none;
            border-radius: 1.5rem;
            padding: 2%;
            width: 60%;
            background: #f8f9fa;
            font-weight: bold;
            color: #383d41;
            margin-top: 1%;
            margin-bottom: 3%;
            cursor: pointer;
        }
        .register-right{
            background: #f8f9fa;
            border-top-left-radius: 10% 50%;
            border-bottom-left-radius: 10% 50%;
        }
        .register-left img{
            margin-top: 15%;
            margin-bottom: 5%;
            width: 35%;
            -webkit-animation: mover 2s infinite  alternate;
            animation: mover 1s infinite  alternate;
        }
        @-webkit-keyframes mover {
            0% { transform: translateY(0); }
            100% { transform: translateY(-20px); }
        }
        @keyframes mover {
            0% { transform: translateY(0); }
            100% { transform: translateY(-20px); }
        }
        .register-left p{
            font-weight: lighter;
            padding: 12%;
            margin-top: -9%;
        }
        .register .register-form{
            padding: 10%;
            margin-top: 10%;
            padding-right: 0;
        }
        .btnRegister{
            float: right;
            /*margin-top: 10%;*/
            border: none;
            border-radius: 1.5rem;
            padding: 2%;
            background: #0062cc;
            color: #fff;
            font-weight: 600;
            width: 50%;
            cursor: pointer;
        }
        .register .nav-tabs{
            margin-top: 3%;
            border: none;
            background: #0062cc;
            border-radius: 1.5rem;
            /*width: 26%;*/
            float: right;
        }
        .register .nav-tabs .nav-link{
            padding: 2%;
            height: 34px;
            font-weight: 600;
            color: #fff;
            border-top-right-radius: 1.5rem;
            border-bottom-right-radius: 1.5rem;
        }
        .register .nav-tabs .nav-link:hover{
            border: none;
        }
        .register .nav-tabs .nav-link.active{
            width: 100px;
            color: #0062cc;
            border: 2px solid #0062cc;
            border-top-left-radius: 1.5rem;
            border-bottom-left-radius: 1.5rem;
        }
        .register-heading{
            text-align: center;
            margin-top: 8%;
            margin-bottom: -15%;
            color: #495057;
        }
        .hidden{
            opacity: 0;
        }
        /* Style the form */
        #regForm {
            margin: 100px auto;
            /*padding: 40px;*/
            width: 70%;
            min-width: 250px;
        }

        /* Style the input fields */
        input {
            padding: 10px;
            width: 100%;
            font-size: 17px;
            font-family: Raleway;
            border: 1px solid #aaaaaa;
        }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

        /* Hide all steps by default: */
        .tab {
            display: none;
        }

        /* Make circles that indicate the steps of the form: */
        .step {
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: #bbbbbb;
            border: none;
            border-radius: 50%;
            display: inline-block;
            opacity: 0.5;
        }

        /* Mark the active step: */
        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #4CAF50;
        }
    </style>
</head>
<body>

<div class="container register">
    <div class="row">
        <div class="col-md-3 register-left">
            <img src="{{ asset('images/default/logo_sm.png') }}" alt=""/>
            <h3>Bievenido</h3>
            <p>Emplear.ec la mejor forma de buscar trabajo!</p>
            <a href="{{ path('app_login') }}"><input type="submit" class="p-1" name="" value="Entrar"/></a><br/>
        </div>
        <div class="col-md-9 register-right">

            {{ form_start(form, { 'attr': {'id': 'regForm'} }) }}

                <h2>Registro:</h2>

                <!-- One "tab" for each step in the form: -->
                <div class="tab">Datos personales:
                    <p>{{ form_row(form.name,{'attr' :{'oninput':'this.className'}}) }}</p>
                    <p>{{ form_row(form.phone,{'attr' :{'oninput':'this.className', 'pattern':'\d*'}}) }}</p>
                </div>

                <div class="tab">Datos de contacto:
                    <p>{{ form_row(form.username,{'attr' :{'oninput':'this.className'}}) }}</p>
                    <p>{{ form_row(form.email,{'attr' :{'oninput':'this.className'}}) }}</p>
                </div>

                <div class="tab">Típo de cuenta:
                    {{ form_label(form.employer,'',{'label_attr' :{'class':'radio-inline'}}) }}
                    {{ form_widget(form.employer,{'attr' :{'oninput':'this.className'}}) }}
                    {{ form_errors(form.employer) }}
                </div>

                <div class="tab">Contraseña:
                    <p>{{ form_row(form.plainPassword.first,{'attr' :{'oninput':'this.className'}}) }}</p>
                    <p>{{ form_widget(form.plainPassword.second,{'attr' :{'oninput':'this.className'}}) }}</p>
                </div>

                <div style="overflow:auto;">
                    <div style="float:right;">
                        <button type="button" id="prevBtn" class="btn btn-primary" onclick="nextPrev(-1)">Anterior</button>
                        <button type="button" id="nextBtn" class="btn btn-primary"  onclick="nextPrev(1)">Siguiente</button>
                    </div>
                </div>

                <!-- Circles which indicates the steps of the form: -->
                <div style="text-align:center;margin-top:40px;">
                    <span class="step"></span>
                    <span class="step"></span>
                    <span class="step"></span>
                    <span class="step"></span>
                </div>
            <div class="hidden">
                {{ form_rest(form) }}
            </div>
           {{ form_end(form) }}

        </div>
    </div>

</div>

{{ encore_entry_script_tags('app') }}
<script type="text/javascript">
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
            // This function will display the specified tab of the form ...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            // ... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Enviar";
            } else {
                document.getElementById("nextBtn").innerHTML = "Siguiente";
            }
            // ... and run a function that displays the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form... :
            if (currentTab >= x.length) {
                //...the form gets submitted:
                document.getElementById("regForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
                if (y[i].type == "radio") {
                    console.log(y[i].value);
                }
                if (y[i].type == "tel") {
                    var reg = /^\d+$/;
                    if(!reg.test(y[i].value))
                        valid = false;
                }
                if (y[i].type == "email") {
                    var reg = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                    if(!reg.test(y[i].value))
                        valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class to the current step:
            x[n].className += " active";
        }
</script>

</body>
</html>
